# Application Info
spring.application.name=GatewayMS
server.port=9000

# CORS Settings (updated keys)
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-origins=http://localhost:3000
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-headers=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allow-credentials=true

# Optional: Remove duplicate CORS headers
spring.cloud.gateway.server.webflux.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials RETAIN_FIRST

# Route Configuration for UserMS (updated keys)
spring.cloud.gateway.server.webflux.routes[0].id=UserMS
spring.cloud.gateway.server.webflux.routes[0].uri=lb://UserMS
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/user/**
spring.cloud.gateway.server.webflux.routes[0].filters[0]=TokenFilter


# Route Configuration for ProfileMS (updated keys)
spring.cloud.gateway.server.webflux.routes[1].id=ProfileMS
spring.cloud.gateway.server.webflux.routes[1].uri=lb://ProfileMS
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/profile/**
spring.cloud.gateway.server.webflux.routes[1].filters[0]=TokenFilter


# Route Configuration for AppointmentMS (updated keys)
spring.cloud.gateway.server.webflux.routes[2].id=AppointmentMS
spring.cloud.gateway.server.webflux.routes[2].uri=lb://Appointment
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/appointment/**
spring.cloud.gateway.server.webflux.routes[2].filters[0]=TokenFilter

# Route Configuration for PharmacyMS (updated keys)
spring.cloud.gateway.server.webflux.routes[3].id=PharmacyMS
spring.cloud.gateway.server.webflux.routes[3].uri=lb://Pharmacy
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/pharmacy/**
spring.cloud.gateway.server.webflux.routes[3].filters[0]=TokenFilter

















#spring.cloud.gateway.server.web.flux.routes[0].id=UserMS
#spring.cloud.gateway.server.web.flux.routes[0].uri=http://localhost:8080
#spring.cloud.gateway.server.web.flux.routes[0].predicates[0]=path=/user/**
#spring.cloud.gateway.server.web.flux.routes[0].filter[0]=filterToken